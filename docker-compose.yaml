services:
  front-end:
    container_name: front-end
    build:
      context: ./front-end  # Path to the front-end directory
      dockerfile: Dockerfile.dev
    env_file: .env
    ports:
      - "5173:5173"  # Vite dev server port for HMR
    volumes:
      - ./front-end:/app  # Mounts the front-end directory for live updates
      - /app/node_modules  # Avoids overwriting node_modules inside the container
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensures file change detection works in Docker
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    depends_on:
      - back-end
    
  back-end:   # Node server 
    container_name: back-end
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    build:
      context: ./back-end
    env_file: .env
    volumes:
      - ./back-end:/nodejs
      - /nodejs/node_modules
      - ./back-end/seed-images:/app/seed-images:ro
    depends_on:
      - mongo
      - minio

  mongo:    # Database service
    container_name: mongo
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    build:
      context: ./mongo
    env_file: .env
    volumes:
      - database-v:/data/db

  minio:
    container_name: minio
    build:
      context: ./minio
    restart: unless-stopped
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck: # Essential for depends_on condition: service_healthy
        test: ["CMD", "mc", "ready", "local"] # 'local' is the default alias mc uses internally
        interval: 5s
        timeout: 3s
        retries: 5
        start_period: 5s # Give minio time to initialize

volumes:
  database-v:
    name: "database-v"
  minio-data:
    name: "minio-data"